// This file is auto-generated by @hey-api/openapi-ts

export type Airport = {
    name: string;
    address: string;
    code: string;
};

export type BookingModel = {
    id: string;
    user_id: string;
    date: string;
    departure: string;
    origin: string;
    destination: string;
    arrive: string;
    status: string;
};

export type BookingPaymentResponse = {
    payment_id: string;
    email: string;
};

export type CheckoutModel = {
    id: string;
    uid: string;
};

export type FlightRoutSchedule = {
    departure: string;
    arrival: string;
};

export type FlightRoute = {
    id: string;
    origin: Array<string>;
    destination: Array<string>;
    schedule: FlightRoutSchedule;
    date: string;
    price: number;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

export type LoginRequest = {
    email: string;
    password: string;
};

export type LoginResponse = {
    id: string;
};

export type PassengerModel = {
    name: string;
    lastname: string;
    gender: string;
    country: string;
    birthday: string;
    identity: PaymentIdentity;
};

export type PaymentContact = {
    prefix: string;
    name: string;
    lastname: string;
    email: string;
    country_code: string;
    phone_number: string;
};

export type PaymentGateway = {
    payment_id: string;
    user_id: string;
    type: string;
    number: string;
    out_date: string;
    cvv: string;
    holder_name: string;
};

export type PaymentIdentity = {
    type: string;
    number: string;
    out_date: string | null;
};

export type PaymentModel = {
    user_id: string;
    seat_class: string;
    flight_route_id: string;
    passengers: Array<PassengerModel>;
    contact: PaymentContact;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type AirportGetAirportsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/airport/';
};

export type AirportGetAirportsResponses = {
    /**
     * Successful Response
     */
    200: Array<Airport>;
};

export type AirportGetAirportsResponse = AirportGetAirportsResponses[keyof AirportGetAirportsResponses];

export type UserUsersData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user/';
};

export type UserUsersResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type AuthLoginData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/api/auth/login';
};

export type AuthLoginErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AuthLoginError = AuthLoginErrors[keyof AuthLoginErrors];

export type AuthLoginResponses = {
    /**
     * Successful Response
     */
    200: LoginResponse;
};

export type AuthLoginResponse = AuthLoginResponses[keyof AuthLoginResponses];

export type FlightSearchFlightData = {
    body?: never;
    path?: never;
    query: {
        tripe_type: string;
        seat_class: string;
        origin: string;
        destination: string;
        date: string;
        adult: number;
        child: number;
        kid: number;
    };
    url: '/api/flight/';
};

export type FlightSearchFlightErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type FlightSearchFlightError = FlightSearchFlightErrors[keyof FlightSearchFlightErrors];

export type FlightSearchFlightResponses = {
    /**
     * Successful Response
     */
    200: Array<FlightRoute>;
};

export type FlightSearchFlightResponse = FlightSearchFlightResponses[keyof FlightSearchFlightResponses];

export type BookingBookingsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/booking/';
};

export type BookingBookingsResponses = {
    /**
     * Successful Response
     */
    200: Array<BookingModel>;
};

export type BookingBookingsResponse = BookingBookingsResponses[keyof BookingBookingsResponses];

export type PaymentPaymentsData = {
    body: PaymentModel;
    path?: never;
    query?: never;
    url: '/api/payment/';
};

export type PaymentPaymentsErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PaymentPaymentsError = PaymentPaymentsErrors[keyof PaymentPaymentsErrors];

export type PaymentPaymentsResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PaymentCheckoutData = {
    body: CheckoutModel;
    path?: never;
    query?: never;
    url: '/api/payment/checkout';
};

export type PaymentCheckoutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PaymentCheckoutError = PaymentCheckoutErrors[keyof PaymentCheckoutErrors];

export type PaymentCheckoutResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PaymentPaymentGatewayData = {
    body: PaymentGateway;
    path?: never;
    query?: never;
    url: '/api/payment/payment_gateway';
};

export type PaymentPaymentGatewayErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PaymentPaymentGatewayError = PaymentPaymentGatewayErrors[keyof PaymentPaymentGatewayErrors];

export type PaymentPaymentGatewayResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PaymentPaymentSuccessData = {
    body?: never;
    path?: never;
    query: {
        booking_id: string;
    };
    url: '/api/payment/success';
};

export type PaymentPaymentSuccessErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PaymentPaymentSuccessError = PaymentPaymentSuccessErrors[keyof PaymentPaymentSuccessErrors];

export type PaymentPaymentSuccessResponses = {
    /**
     * Successful Response
     */
    200: BookingPaymentResponse;
};

export type PaymentPaymentSuccessResponse = PaymentPaymentSuccessResponses[keyof PaymentPaymentSuccessResponses];

export type UtilsTestEmailData = {
    body?: never;
    path?: never;
    query: {
        email_to: string;
    };
    url: '/api/utils/test-email';
};

export type UtilsTestEmailErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UtilsTestEmailError = UtilsTestEmailErrors[keyof UtilsTestEmailErrors];

export type UtilsTestEmailResponses = {
    /**
     * Successful Response
     */
    201: unknown;
};

export type UtilsHealthCheckData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/utils/health-check';
};

export type UtilsHealthCheckResponses = {
    /**
     * Successful Response
     */
    200: boolean;
};

export type UtilsHealthCheckResponse = UtilsHealthCheckResponses[keyof UtilsHealthCheckResponses];

export type ClientOptions = {
    baseURL: 'http://127.0.0.1:8000' | (string & {});
};