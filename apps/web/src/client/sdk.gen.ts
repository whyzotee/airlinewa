// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { AirportGetAirportsData, AirportGetAirportsResponse, UserUsersData, AuthLoginData, AuthLoginError, FlightSearchFlightData, FlightSearchFlightResponse, FlightSearchFlightError, PaymentPaymentsData, PaymentPaymentsError, PaymentCheckoutData, PaymentCheckoutError, PaymentPaymentGatewayData, PaymentPaymentGatewayError, UtilsTestEmailData, UtilsTestEmailError, UtilsHealthCheckData, UtilsHealthCheckResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get Airports
 * get all airports
 */
export const airportGetAirports = <ThrowOnError extends boolean = false>(options?: Options<AirportGetAirportsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<AirportGetAirportsResponse, unknown, ThrowOnError>({
        url: '/api/airport/',
        ...options
    });
};

/**
 * Users
 */
export const userUsers = <ThrowOnError extends boolean = false>(options?: Options<UserUsersData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/api/user/',
        ...options
    });
};

/**
 * Login
 */
export const authLogin = <ThrowOnError extends boolean = false>(options: Options<AuthLoginData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, AuthLoginError, ThrowOnError>({
        url: '/api/auth/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Search Flight
 */
export const flightSearchFlight = <ThrowOnError extends boolean = false>(options: Options<FlightSearchFlightData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<FlightSearchFlightResponse, FlightSearchFlightError, ThrowOnError>({
        url: '/api/flight/',
        ...options
    });
};

/**
 * Payments
 */
export const paymentPayments = <ThrowOnError extends boolean = false>(options: Options<PaymentPaymentsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, PaymentPaymentsError, ThrowOnError>({
        url: '/api/payment/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Checkout
 */
export const paymentCheckout = <ThrowOnError extends boolean = false>(options: Options<PaymentCheckoutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, PaymentCheckoutError, ThrowOnError>({
        url: '/api/payment/checkout',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Payment Gateway
 */
export const paymentPaymentGateway = <ThrowOnError extends boolean = false>(options: Options<PaymentPaymentGatewayData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, PaymentPaymentGatewayError, ThrowOnError>({
        url: '/api/payment/payment_gateway',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Test Email
 * Test emails.
 */
export const utilsTestEmail = <ThrowOnError extends boolean = false>(options: Options<UtilsTestEmailData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, UtilsTestEmailError, ThrowOnError>({
        url: '/api/utils/test-email',
        ...options
    });
};

/**
 * Health Check
 */
export const utilsHealthCheck = <ThrowOnError extends boolean = false>(options?: Options<UtilsHealthCheckData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<UtilsHealthCheckResponse, unknown, ThrowOnError>({
        url: '/api/utils/health-check',
        ...options
    });
};