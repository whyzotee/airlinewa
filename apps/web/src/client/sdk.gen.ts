// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-axios';
import type { ReadRootGetData, ApiCheckoutApiCheckoutPostData, ApiCheckoutApiCheckoutPostError, GetPaymentApiPaymentPostData, GetPaymentApiPaymentPostError, LoginApiAuthLoginPostData, LoginApiAuthLoginPostError, ApiGetAirportListApiAirportGetData, ApiGetAirportListApiAirportGetResponse, GetTestApiTestGetData, ApiSearchFlightApiFlightGetData, ApiSearchFlightApiFlightGetError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Read Root
 */
export const readRootGet = <ThrowOnError extends boolean = false>(options?: Options<ReadRootGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

/**
 * Api Checkout
 */
export const apiCheckoutApiCheckoutPost = <ThrowOnError extends boolean = false>(options: Options<ApiCheckoutApiCheckoutPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, ApiCheckoutApiCheckoutPostError, ThrowOnError>({
        url: '/api/checkout',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Get Payment
 */
export const getPaymentApiPaymentPost = <ThrowOnError extends boolean = false>(options: Options<GetPaymentApiPaymentPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, GetPaymentApiPaymentPostError, ThrowOnError>({
        url: '/api/payment',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Login
 */
export const loginApiAuthLoginPost = <ThrowOnError extends boolean = false>(options: Options<LoginApiAuthLoginPostData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<unknown, LoginApiAuthLoginPostError, ThrowOnError>({
        url: '/api/auth/login',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Api Get Airport List
 */
export const apiGetAirportListApiAirportGet = <ThrowOnError extends boolean = false>(options?: Options<ApiGetAirportListApiAirportGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<ApiGetAirportListApiAirportGetResponse, unknown, ThrowOnError>({
        url: '/api/airport',
        ...options
    });
};

/**
 * Get Test
 */
export const getTestApiTestGet = <ThrowOnError extends boolean = false>(options?: Options<GetTestApiTestGetData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/api/test',
        ...options
    });
};

/**
 * Api Search Flight
 */
export const apiSearchFlightApiFlightGet = <ThrowOnError extends boolean = false>(options: Options<ApiSearchFlightApiFlightGetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<unknown, ApiSearchFlightApiFlightGetError, ThrowOnError>({
        url: '/api/flight',
        ...options
    });
};